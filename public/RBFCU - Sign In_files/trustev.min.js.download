var JSLOADTIME = (new Date).getTime(), ConfigManager = TrustevV2 || { BaseUrl: "https://app.trustev.com/api/v2.0", PublicKey: "", EnableFP: !1, BaseHost: "app.trustev.com", CdnUrl: "https://cdn.trustev.com", CookieName: "tuid", ConsoleLoggingEnabled: !1, Version: "v3.9.30420" }, TrustevLogger = TrustevLogger || { LogMessage: function (e) { if (ConfigManager.ConsoleLoggingEnabled) { var r = (new Date).getTime() - JSLOADTIME; console.log(r + "ms : " + e) } } }, IsNotEmptyUUID = IsNotEmptyUUID || function (e) { return null !== e && "null" !== e && "00000000-0000-0000-0000-000000000000" !== e && "" !== e && "undefined" !== e && void 0 !== e && "NotSet" !== e }, TrustevV2 = TrustevV2 || function () { var e = "", r = "", t = {}, a = "https://app.trustev.com/api/v2.0", o = !0, n = {}, i = "", s = ""; var c = function () { if ("" === s) { for (var e = document.getElementsByTagName("script"), r = null, t = 0; t < e.length; ++t)if (null !== (o = e[t]) && null !== o.getAttribute("src") && o.getAttribute("src").toLowerCase().indexOf("api/v2.0/trustevjs") > -1) { r = e[t]; break } if (null !== r) { var a = r.src.replace(/^[^\?]+\??/, ""); s = function (e) { var r = new Object; if (!e) return r; for (var t = e.split(/[;&]/), a = 0; a < t.length; a++) { var o = t[a].split("="); if (o && 2 == o.length) { var n = unescape(o[0]), i = unescape(o[1]); i = i.replace(/\+/g, " "), r[n] = i } } return r }(a) } } var o; return s }, g = function (e) { for (var r = e + "=", t = document.cookie.split(";"), a = 0; a < t.length; a++) { for (var o = t[a]; " " == o.charAt(0);)o = o.substring(1); if (0 == o.indexOf(r)) return o.substring(r.length, o.length) } return "" }, u = function (e, r, t) { var a = ""; if (t > 0) { var o = new Date; o.setTime(o.getTime() + 60 * t * 1e3); a = "expires=" + o.toUTCString() } document.cookie = e + "=" + r + ";" + a + "path=/; SameSite=None; Secure;" }, l = function () { var e = navigator.cookieEnabled; return e || (document.cookie = "testcookie", e = -1 != document.cookie.indexOf("testcookie")), e }; return { BaseUrl: a, DoesDeviceSupportImageCapture: function (e) { try { if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) return void e(null); navigator.mediaDevices.enumerateDevices().then(function (r) { for (var t = 0; t < r.length; t++)if ("videoinput" === r[t].kind) return void e(!0); e(!1) }) } catch (r) { return TrustevLogger.LogMessage("TrustevV2.DoesDeviceSupportImageCapture: Error : " + r), void e(null) } }, Init: function (t, o, n, s, c) { if (ConfigManager.PublicKey = t, ConfigManager.EnableFP = !!n, s && (a = s, ConfigManager.BaseUrl = s), c && (ConfigManager.CdnUrl = c), l() && function e() { null !== document.body ? (EvercookieManager.Init([QuickStorageManager, IFrameStorageManager], TrustevApiClient), EvercookieManager.GatherEvercookiesAndSendToApi(ConfigManager.CookieName, function (e) { TrustevLogger.LogMessage("Finished getting evercookies : " + JSON.stringify(e)), EvercookieManager.SetMostAccurateEvercookie(ConfigManager.CookieName, e) })) : setTimeout(e, 1) }(), e = TrustevV2.GetCookie("tsid-" + ConfigManager.PublicKey), l()) { var g = TrustevV2.GetCookie("jsConfig-" + ConfigManager.PublicKey); TrustevV2.ExecuteExternalServices(g), TrustevLogger.LogMessage("Execute External Services Else Part") } else TrustevV2.ExecuteExternalServices(), TrustevLogger.LogMessage("Execute External Services If Part"); "NotSet" == e || "" == e ? (TrustevLogger.LogMessage("TrustevV2-Init : No sessionId found so calling /session endpoint"), TrustevApiClient.CallAPI("POST", a + "/session", "{}", function () { try { if (e = JSON.parse(this.responseText).SessionId, r = e, null != i.configuration.javascript.deviceId && IsNotEmptyUUID(e) && !0 === i.configuration.javascript.deviceId.enabled && TrustevV2.IOBlackBox.length > 0) { var t = TrustevV2.IOBlackBox[TrustevV2.IOBlackBox.length - 1], n = {}; n.sessionId = e, n.IsComplete = t.complete, n.blackBox = t.blackBox, TrustevApiClient.CallAPI("PUT", a + "/ExtendedDevice", JSON.stringify(n), function () { TrustevLogger.LogMessage("TrustevV2-InitIovation : Successfully sent blackbox") }) } null != i.configuration.javascript.passiveAuth && !0 === i.configuration.javascript.passiveAuth.enabled && TrustevApiClient.CallAPI("GET", a + "/configuration/" + e + "/GetPassiveAuthUrl", "{}", function () { var e = JSON.parse(this.responseText).PassiveAuthenticationURL; TrustevV2.PassiveAuthComplete(e) }) } catch (e) { TrustevLogger.LogMessage("TrustevV2-Init : Error on calling the session endpoint: " + e) } "NotSet" != e && "" != e && TrustevV2.SetCookie("tsid-" + ConfigManager.PublicKey, e, 20), EvercookieManager.SetSessionId(e), TrustevV2.SessionId = e, TrustevV2.AsyncGatherInformation(), o.apply(this, [e]) })) : (TrustevLogger.LogMessage("TrustevV2-Init : Existing sessionId found : " + e), TrustevV2.SessionId = e, TrustevV2.AsyncGatherInformation(), EvercookieManager.SetSessionId(e), o.apply(this, [e])) }, ExecuteExternalServices: function (r) { if (r) { if (null != (i = JSON.parse(r)).configuration.javascript.deviceId && !0 === i.configuration.javascript.deviceId.enabled && TrustevV2.InitIovation(), null != i.configuration.javascript.locationServices && !0 === i.configuration.javascript.locationServices.enabled) try { TrustevV2.AsyncGatherLocationInfo(i.configuration.javascript.locationServices.evURL) } catch (e) { TrustevLogger.LogMessage("TrustevV2.ExecuteExternalServices: Error on TrustevV2.AsyncGatherLocationInfo: " + e) } null != i.configuration.javascript.passiveAuth && !0 === i.configuration.javascript.passiveAuth.enabled && "" !== e && TrustevApiClient.CallAPI("GET", a + "/configuration/" + e + "/GetPassiveAuthUrl", "{}", function () { var e = JSON.parse(this.responseText).PassiveAuthenticationURL; TrustevV2.PassiveAuthComplete(e) }) } else TrustevApiClient.CallAPI("GET", a + "/configuration/javascript", "{}", function () { try { var e = JSON.parse(this.responseText); TrustevLogger.LogMessage("TrustevV2.ExecuteExternalServices: Configuration received successfully"), l() && TrustevV2.SetCookie("jsConfig-" + ConfigManager.PublicKey, JSON.stringify(e), 5), TrustevV2.ExecuteExternalServices(JSON.stringify(e)) } catch (e) { TrustevLogger.LogMessage("TrustevV2.ExecuteExternalServices: Error on calling the configuration/javascript endpoint: " + e) } }) }, IOBlackBox: [], InitIovation: function () { setTimeout(function () { TrustevLogger.LogMessage("TrustevV2-InitIovation : Timing out black box sending after 5 seconds"), o = !1 }, 5e3), window.io_global_object_name = "IGLOO", window.IGLOO = window.IGLOO || { enable_flash: !1, bb_callback: function (r, t) { var n = { blackBox: r, complete: t }; TrustevV2.IOBlackBox.push(n); var i = {}; i.sessionId = e, i.IsComplete = t, i.blackBox = r, o && "" !== e && IsNotEmptyUUID(e) ? (TrustevApiClient.CallAPI("PUT", a + "/ExtendedDevice", JSON.stringify(i), function () { TrustevLogger.LogMessage("TrustevV2-InitIovation : Successfully sent blackbox") }), t && (o = !1)) : TrustevLogger.LogMessage("TrustevV2-InitIovation : Not sending black box") }, loader: { fp_static: ConfigManager.EnableFP, subkey: "nLdMddw0jvDUZG3ETn8y0CEt7ZECk8Jm4N-uQ7wPu0k", version: "early5" } }, function e() { function r(e, r) { var a, o = {}; for (a = e.length - 1; -1 < a; a--)0 < a ? o[a] = function () { var n = a; return function () { return t(e[n], o[n + 1], r) } }() : t(e[a], o[a + 1], r) } function t(e, r, t) { var o, n = document.createElement("script"), i = e[0].split("?")[0].split("/"); o = i[i.length - 1].split(".")[0], i = s[t] && s[t].staticVer && s[t].staticVer + "/" || e[1], /([0-9]+\.){2}[0-9]+\//.test(e[1]) && i !== e[1] && a("loader: Overriding configured version with staticVer."), e[0] = e[0].replace("##version##", i), n.setAttribute("src", e[0]), n && n.addEventListener ? n.addEventListener("error", function () { c[t + "_" + o + "_load_failure"] = "true" }) : n.attachEvent && n.attachEvent("onerror", function () { c[t + "_" + o + "_load_failure"] = "true" }), r && (n.onload = r), document.getElementsByTagName("head")[0].appendChild(n) } function a(e) { if ("function" == typeof s.trace_handler) try { s.trace_handler(e) } catch (e) { } } function o(e, r) { var t = null != e; return !(!t || "1" !== e.toString() && "true" !== e.toString().toLowerCase()) || (!t || "0" !== e.toString() && "false" !== e.toString().toLowerCase()) && ("boolean" == typeof r && r) } var n = window, i = n.io_global_object_name || "IGLOO", s = n[i] = n[i] || {}, c = s.loader = s.loader || {}, g = [], u = []; if (c.loaderMain) return a("loader: Loader script has already run, try reducing the number of places it's being included."), !1; c.loaderMain = e, c.loaderVer = "5.1.0", function () { var e, r, t, i = o(c.tp, !0), l = o(c.fp_static, !0), d = o(c.fp_dyn, !0), v = o(c.enable_legacy_compatibility), f = o(c.tp_split), p = c.tp_host && c.tp_host.replace(/\/+$/, "") || "https://mpsnare.iesnare.com", b = c.fp_static_override_uri, S = void 0 !== c.uri_hook ? c.uri_hook + "/" : "/iojs/", h = (c.version || "versionOrAliasIsRequired") + "/", L = c.subkey ? n.encodeURIComponent(c.subkey) + "/" : "", T = c.tp_resource || "wdp.js", M = c.tp_host ? "&tp_host=" + n.encodeURIComponent(c.tp_host) : "", m = b ? "&fp_static_uri=" + n.encodeURIComponent(b) : ""; c.tp_host = p, e = o(s.enable_flash, !0), r = s.io && s.io.enable_flash, t = s.fp && s.fp.enable_flash, r = null != r ? o(r, !0) : e, null != t ? t = o(t, !0) : r = e, e = r ? "&flash=true" : "&flash=false", t = t ? "&flash=true" : "&flash=false", M = "?loaderVer=" + c.loaderVer + "&compat=" + v + "&tp=" + i + "&tp_split=" + f + M + "&fp_static=" + l + "&fp_dyn=" + d + m, i || l || a("loader: Not currently configured to load fp_static or tp script(s)."), s.fp && s.fp.staticVer && s.fp.staticVer + "/" !== h && (h = s.fp.staticVer + "/", a("loader: Configured version replaced with that from pre-loaded static script.")), l || s.fp && s.fp.staticMain ? (S = (S + "##version##" + L).replace(/\/\//g, "/"), l && (s.fp && s.fp.staticMain ? v && !s.fp.preCompatMain && a("loader: enable_legacy_compatibility on, but included static does not have the compat wrapper.") : b ? g.push([b, ""]) : g.push([S + "static_wdp.js" + M + t, h])), !d || s.fp && s.fp.dynMain ? s.fp && s.fp.dynMain && a("loader: First party dynamic script has already been loaded, disable fp_dyn or make sure you're not manually including the dynamic file separately.") : g.push([S + "dyn_wdp.js" + M + t, h])) : o(c.fp_dyn) && a("loader: Invalid Config, first party dynamic script set to load without static."), i && (s.io && s.io.staticMain ? a("loader: Third party script has already been loaded.") : (S = p + "/##version##" + L, f ? (u.push([S + "static_wdp.js" + M + e, h]), u.push([S + "dyn_wdp.js" + M + e, h]), c.tp_resource && a("loader: Invalid Config: both tp_resource and tp_split set. Ignoring tp_resource.")) : u.push([S + T + M + e, h]))) }(), r(g, "fp"), r(u, "io") }() }, SetCookie: u, GetCookie: g, AsyncGatherInformation: function () { "NotSet" != e && "" != e && setTimeout(function () { TrustevV2.GatherInformation() }, 0) }, AsyncGatherLocationInfo: function (e) { setTimeout(function () { TrustevV2.LocationServices.CallEvUrl(e), TrustevV2.LocationServices.GetHtml5Location() }, 0) }, GatherInformation: function (r) { IsNotEmptyUUID(e) && TrustevApiClient.CallAPI("POST", a + "/Session/" + e + "/detail", "{}", function () { }), t.SessionId = e, t.DeviceId = e; try { t["c5d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.buildID ? navigator.buildID : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorBuildID error: " + e) } try { t["c6d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.platform ? navigator.platform : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorPlatform error: " + e) } try { t["c7d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.appCodeName ? navigator.appCodeName : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorAppCodeName error: " + e) } try { t["c8d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.appVersion ? navigator.appVersion : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorAppVersion error: " + e) } try { t["c9d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.appMinorVersion ? navigator.appMinorVersion : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorAppMinorVersion error: " + e) } try { t["cbd1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.cpuClass ? navigator.cpuClass : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorCpuClass error: " + e) } try { t["ccd1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.oscpu ? navigator.oscpu : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorOscpu error: " + e) } try { t["cdd1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.product ? navigator.product : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorProduct error: " + e) } try { t["ced1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.productSub ? navigator.productSub : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorProductSub error: " + e) } try { t["cfd1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.vendor ? navigator.vendor : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorVendor error: " + e) } try { t["d0d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.vendorSub ? navigator.vendorSub : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorVendorSub error: " + e) } try { t["d1d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.language ? navigator.language : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorLanguage error: " + e) } try { t["d2d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.userLanguage ? navigator.userLanguage : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorUserLanguage error: " + e) } try { t["d3d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.browserLanguage ? navigator.browserLanguage : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorBrowserLanguage error: " + e) } try { t["d4d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.systemLanguage ? navigator.systemLanguage : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorSystemLanguage error: " + e) } try { t["d5d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.doNotTrack ? navigator.doNotTrack : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorDoNotTrack error: " + e) } try { t["d6d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.msDoNotTrack ? navigator.msDoNotTrack : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorMsDoNotTrack error: " + e) } try { t["d7d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.javaEnabled() ? navigator.javaEnabled() : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorJavaEnabled error: " + e) } try { t["d8d1c702-f8bb-e311-be87-089e010f73f9"] = null != navigator.cookieEnabled ? navigator.cookieEnabled : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorCookieEnabled error: " + e) } try { t["d8406055-0ab1-e311-beb3-089e010f7621"] = null != navigator.userAgent ? navigator.userAgent : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorUserAgent error: " + e) } try { t["b886f45f-0ab1-e311-beb3-089e010f7621"] = null != navigator.appName ? navigator.appName : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorAppName error: " + e) } try { for (var o = [], i = navigator.plugins, s = 0; i[s]; ++s) { var c = {}; c.name = i[s].name, c.description = i[s].description, c.filename = i[s].filename, c.length = i[s].length, o.push(c) } t["c5f0baba-92b6-e311-beb6-089e010f7621"] = JSON.stringify(o) } catch (e) { TrustevLogger.LogMessage("Error in JavascriptData.NavigatorPlugins error: " + e) } try { t["0e96e122-00bc-e311-be87-089e010f73f9"] = null != screen.width ? screen.width : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenWidth error: " + e) } try { t["0f96e122-00bc-e311-be87-089e010f73f9"] = null != screen.height ? screen.height : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenHeight error: " + e) } try { t["1096e122-00bc-e311-be87-089e010f73f9"] = null != screen.availWidth ? screen.availWidth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenAvailWidth error: " + e) } try { t["1196e122-00bc-e311-be87-089e010f73f9"] = null != screen.availHeight ? screen.availHeight : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenAvailHeight error: " + e) } try { t["1296e122-00bc-e311-be87-089e010f73f9"] = null != screen.colorDepth ? screen.colorDepth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenColorDepth error: " + e) } try { t["1396e122-00bc-e311-be87-089e010f73f9"] = null != screen.pixelDepth ? screen.pixelDepth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenPixelDepth error: " + e) } try { t["1496e122-00bc-e311-be87-089e010f73f9"] = null != screen.fontSmoothingEnabled ? screen.fontSmoothingEnabled : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenFontSmoothingEnabled error: " + e) } try { t["1596e122-00bc-e311-be87-089e010f73f9"] = null != screen.bufferDepth ? screen.bufferDepth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenBufferDepth error: " + e) } try { t["1696e122-00bc-e311-be87-089e010f73f9"] = null != screen.deviceXDPI ? screen.deviceXDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenDeviceXDPI error: " + e) } try { t["1796e122-00bc-e311-be87-089e010f73f9"] = null != screen.deviceYDPI ? screen.deviceYDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenDeviceYDPI error: " + e) } try { t["1996e122-00bc-e311-be87-089e010f73f9"] = null != screen.logicalXDPI ? screen.logicalXDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenLogicalXDPI error: " + e) } try { t["1a96e122-00bc-e311-be87-089e010f73f9"] = null != screen.logicalYDPI ? screen.logicalYDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenLogicalYDPI error: " + e) } try { t["1b96e122-00bc-e311-be87-089e010f73f9"] = null != screen.systemXDPI ? screen.systemXDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenSystemXDPI error: " + e) } try { t["1c96e122-00bc-e311-be87-089e010f73f9"] = null != screen.systemYDPI ? screen.systemYDPI : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenSystemYDPI error: " + e) } try { t["1d96e122-00bc-e311-be87-089e010f73f9"] = null != screen.updateInterval ? screen.updateInterval : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.ScreenUpdateInterval error: " + e) } try { t["1e96e122-00bc-e311-be87-089e010f73f9"] = null != window.devicePixelRatio ? window.devicePixelRatio : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowDevicePixelRatio error: " + e) } try { t["1f96e122-00bc-e311-be87-089e010f73f9"] = null != window.outerWidth ? window.outerWidth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowOuterWidth error: " + e) } try { t["2096e122-00bc-e311-be87-089e010f73f9"] = null != window.outerHeight ? window.outerHeight : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowOuterHeight error: " + e) } try { t["2196e122-00bc-e311-be87-089e010f73f9"] = null != window.innerWidth ? window.innerWidth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowInnerWidth error: " + e) } try { t["2296e122-00bc-e311-be87-089e010f73f9"] = null != window.innerHeight ? window.innerHeight : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowInnerHeight error: " + e) } try { t["2396e122-00bc-e311-be87-089e010f73f9"] = null != window.screenX ? window.screenX : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowScreenX error: " + e) } try { t["2496e122-00bc-e311-be87-089e010f73f9"] = null != window.screenY ? window.screenY : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowScreenY error: " + e) } try { t["2596e122-00bc-e311-be87-089e010f73f9"] = null != window.screenTop ? window.screenTop : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowScreenTop error: " + e) } try { t["2696e122-00bc-e311-be87-089e010f73f9"] = null != window.screenLeft ? window.screenLeft : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.WindowScreenLeft error: " + e) } try { t["2796e122-00bc-e311-be87-089e010f73f9"] = null != document.documentElement.clientWidth ? document.documentElement.clientWidth : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.DocumentDocumentElementClientWidth error: " + e) } try { t["2896e122-00bc-e311-be87-089e010f73f9"] = null != document.documentElement.clientHeight ? document.documentElement.clientHeight : "undefined" } catch (e) { TrustevLogger.LogMessage("Error in JSDisplayData.DocumentDocumentElementClientHeight error: " + e) } IsNotEmptyUUID(e) && TrustevApiClient.CallAPI("POST", a + "/device", JSON.stringify(t), function (t, a) { if (void 0 !== r) return r(t, a); var o; TrustevV2.SetCookie("tsid-" + ConfigManager.PublicKey, e, 20), o = [e], (n["deviceInfoCollected"] || function () { }).apply(void 0, o) }) }, SessionId: function () { if ("NotSet" !== e && "" !== e) return e; if ("" === ConfigManager.PublicKey || "NotSet" === ConfigManager.PublicKey) { var t = c(); if (!t.hasOwnProperty("key")) return; ConfigManager.PublicKey = t.key } if ("NotSet" === (e = g("tsid-" + ConfigManager.PublicKey)) || "" === e) { TrustevLogger.LogMessage("TrustevV2-Init : No sessionId found so calling /session endpoint"); try { var o = null; window.XMLHttpRequest ? o = new XMLHttpRequest : window.ActiveXObject && (o = new ActiveXObject("Microsoft.XMLHTTP")), o && (o.open("POST", a + "/session", !1), o.setRequestHeader("X-PublicKey", ConfigManager.PublicKey), o.setRequestHeader("Content-Type", "application/json"), o.setRequestHeader("X-TU-DV-JS-Version", ConfigManager.Version), o.send("{}"), 200 === o.status && (e = JSON.parse(o.responseText).SessionId, r = e, u("tsid-" + ConfigManager.PublicKey, e, 20))) } catch (e) { TrustevLogger.LogMessage("TrustevV2-Init : Error on calling the /session endpoint") } } return e }(), DeviceId: t.DeviceId || r, LocationServices: { UpdateSessionPosition: function (e) { var r = { SessionId: TrustevV2.SessionId, Latitude: e.coords.latitude, Longitude: e.coords.longitude }; TrustevApiClient.CallAPI("POST", a + "/location", JSON.stringify(r), function () { }) }, GetHtml5Location: function () { navigator.geolocation ? navigator.geolocation.getCurrentPosition(this.UpdateSessionPosition) : TrustevLogger.LogMessage("Geolocation is not supported by this browser.") }, CallEvUrl: function (e) { var r = document.createElement("img"); r.src = e, document.getElementsByTagName("head")[0].appendChild(r) } }, PassiveAuthComplete: function (e) { var r = document.createElement("img"); r.src = e, document.getElementsByTagName("head")[0].appendChild(r) }, On: function (e, r) { n[e] = r }, GetJsUrlParams: c() } }(), TrustevApiClient = TrustevApiClient || { CallAPI: function (e, r, t, a, o) { try { var n = null; if (window.XMLHttpRequest ? n = new XMLHttpRequest : window.ActiveXObject && (n = new ActiveXObject("Microsoft.XMLHTTP")), n) { if (n.onreadystatechange = function () { n.readyState == XMLHttpRequest.DONE && a.apply(this, [n, t]) }, n.open(e, r, !0), null != o) for (var i in o) o.hasOwnProperty(i) && n.setRequestHeader(i, o[i]); else n.setRequestHeader("X-PublicKey", ConfigManager.PublicKey), n.setRequestHeader("Content-Type", "application/json"), n.setRequestHeader("X-TU-DV-JS-Version", ConfigManager.Version); "GET" === e ? n.send() : n.send(t) } } catch (e) { TrustevLogger.LogMessage("Error on CallAPI - TrustevApiClient: " + e) } } }, EvercookieManager = EvercookieManager || (_selectedStorageManagers = [], _trustevApiClient = null, _sessionId = null, _isInitiated = !1, _queuedEvercookies = [], _completeManagerCount = 0, _gatherEvercookieCallback = null, _gatheredEvercookies = [], { Init: function (e, r) { _selectedStorageManagers = e, _trustevApiClient = r, _isInitiated = !0 }, SetSessionId: function (e) { if (_sessionId = e, TrustevLogger.LogMessage("EvercookieManager-SetSessionId : Setting SessionId : " + e), _queuedEvercookies.length > 0) for (var r = 0; r < _queuedEvercookies.length; r++)this.SendEvercookieToApi(_queuedEvercookies[r], this.TrustevApiCallback); if (_completeManagerCount > 0 && _completeManagerCount === _selectedStorageManagers.length) { var t = { source: "init" }; t.id = _sessionId, this.SendEvercookieToApi(t, this.TrustevApiCallback) } }, GatherEvercookiesAndSendToApi: function (e, r) { _gatherEvercookieCallback = r; var t = this; if (!_isInitiated) throw "You need to Init DeviceTagManager before executing"; for (var a = 0; a < _selectedStorageManagers.length; a++)_selectedStorageManagers[a].Get(e, function (e) { if (e.id) TrustevLogger.LogMessage("EvercookieManager-GatherEvercookiesAndSendToApi : Storage manager returned cookie : " + JSON.stringify(e)), _gatheredEvercookies.push(e), _sessionId ? t.SendEvercookieToApi(e, t.TrustevApiCallback) : _queuedEvercookies.push(e); else if (_completeManagerCount += 1, _completeManagerCount === _selectedStorageManagers.length && _sessionId) { var r = { source: "init" }; r.id = _sessionId, t.SendEvercookieToApi(r, t.TrustevApiCallback) } }) }, SetMostAccurateEvercookie: function (e, r, t) { var a = !1, o = !1; if (r && r.length > 0) for (var n = 0; n < r.length; n++)if (r[n].id && (a = !0, 1 !== r[n].source.indexOf("iframe-"))) { TrustevLogger.LogMessage("EvercookieManager-SetMostAccurateEvercookie : Found an iframe evercookie so setting that. Evercookie : " + JSON.stringify(r[n])); for (var i = 0; i < _selectedStorageManagers.length; i++)_selectedStorageManagers[i].Set(e, r[n].id); o = !0; break } if (a && !o) for (var s = 0; s < r.length; s++)if (r[s].id) { TrustevLogger.LogMessage("EvercookieManager-SetMostAccurateEvercookie : Didnt find an iframe evercookie so using local domain one. Evercookie : " + JSON.stringify(r[s])); for (var c = 0; c < _selectedStorageManagers.length; c++)_selectedStorageManagers[c].Set(e, r[s].id) } if (!a) for (var g = 0; g < _selectedStorageManagers.length; g++)TrustevLogger.LogMessage("EvercookieManager-SetMostAccurateEvercookie : Didnt find any evercookies, so going to use sessionId : " + JSON.stringify(_sessionId)), _selectedStorageManagers[g].Set(e, _sessionId); t && t() }, TrustevApiCallback: function () { _completeManagerCount += 1, _completeManagerCount >= _selectedStorageManagers.length && _gatherEvercookieCallback && _gatherEvercookieCallback(_gatheredEvercookies) }, SendEvercookieToApi: function (e, r) { var t = {}; t.EvercookieId = e.id, t.EvercookieSource = e.source, t.SessionId = _sessionId, t.DeviceId = _sessionId, t.PublicKey = ConfigManager.PublicKey, TrustevLogger.LogMessage("EvercookieManager-SendEvercookieToApi : Sending a cookie to API : " + JSON.stringify(e)), _trustevApiClient.CallAPI("POST", ConfigManager.BaseUrl + "/device", JSON.stringify(t), r) } }), SessionStorageManager = SessionStorageManager || function () { var e = null; try { e = window.sessionStorage } catch (e) { TrustevLogger.LogMessage("sessionStorage - error: " + e.message + "; " + e.description) } return null !== e ? { Get: function (r, t) { var a = { source: "sessionstorage" }; try { if (e) { var o = e.getItem(r); null != o && (a.id = o) } } catch (e) { TrustevLogger.LogMessage("evercookie_session_storage - error: " + e.message + "; " + e.description) } t(a) }, Set: function (r, t, a) { e.setItem(r, t), a && a() } } : null }(), LocalStorageManager = LocalStorageManager || function () { var e = null; try { e = window.localStorage } catch (e) { TrustevLogger.LogMessage("localStorage - error: " + e.message + "; " + e.description) } if (null !== e) return { Get: function (r, t) { var a = { source: "localstorage" }; try { if (e) { var o = e.getItem(r); null != o && (a.id = o) } } catch (e) { TrustevLogger.LogMessage("evercookie_local_storage - error: " + e.message + "; " + e.description) } t(a) }, Set: function (r, t, a) { e.setItem(r, t), a && a() } } }(), GlobalStorageManager = GlobalStorageManager || (globalStorage = window.globalStorage, host = window.location.host.replace(/:\d+/, ""), { Get: function (e, r) { var t = { source: "globalstorage" }; if (globalStorage) { globalStorageEvercookie.id = "h1"; var a = globalStorage[host][e]; null != a && (t.id = a) } r(t) }, Set: function (e, r, t) { globalStorage && (globalStorage[host][e] = r), t && t() } }), IndexDbStorageManager = IndexDbStorageManager || (indexDbStorageEvercookie = {}, indexDbStorageEvercookie.source = "indexdb", { Get: function (e, r) { try { if ("indexedDB" in window || (indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB, IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction, IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange), indexedDB) { var t = indexedDB.open("idb_evercookie", 1); t.onerror = function (e) { TrustevLogger.LogMessage("evercookie_indexdb_storage - error: " + e), r(indexDbStorageEvercookie) }, t.onupgradeneeded = function (e) { e.target.result.createObjectStore("evercookie", { keyPath: "name", unique: !1 }) }, t.onsuccess = function (t) { var a = t.target.result; if (a.objectStoreNames.contains("evercookie")) { var o = a.transaction(["evercookie"], "readwrite").objectStore("evercookie").get(e); o.onsuccess = function (e) { if (void 0 !== o.result) { var t = o.result.value; null != t && (indexDbStorageEvercookie.id = t) } r(indexDbStorageEvercookie) } } a.close() } } else r(indexDbStorageEvercookie) } catch (e) { TrustevLogger.LogMessage("evercookie_indexdb_storage - error: " + err), r(indexDbStorageEvercookie) } }, Set: function (e, r, t) { try { if (indexedDB) { var a = indexedDB.open("idb_evercookie", 1); a.onerror = function (e) { TrustevLogger.LogMessage("evercookie_indexdb_storage - error: " + e), t && t() }, a.onupgradeneeded = function (e) { e.target.result.createObjectStore("evercookie", { keyPath: "name", unique: !1 }), t && t() }, a.onsuccess = function (a) { var o = a.target.result; o.objectStoreNames.contains("evercookie") && o.transaction(["evercookie"], "readwrite").objectStore("evercookie").put({ name: e, value: r }), o.close(), t && t() } } else t && t() } catch (e) { TrustevLogger.LogMessage("evercookie_indexdb_storage - error: " + err), t && t() } } }), DatabaseStorageManager = DatabaseStorageManager || (databaseStorageEvercookie = {}, databaseStorageEvercookie.source = "databasestorage", database = null, { Get: function (e, r) { window.openDatabase ? (database || (database = window.openDatabase("etrust", "", e, 1048576)), database.transaction(function (t) { t.executeSql("SELECT value FROM cache WHERE name=?", [e], function (e, t) { if (t.rows.length >= 1) { var a = t.rows.item(0).value; null != a && (databaseStorageEvercookie.id = a) } r(databaseStorageEvercookie) }, function (e, t) { TrustevLogger.LogMessage("evercookie_database_storage - error: " + t), r(databaseStorageEvercookie) }) })) : r(databaseStorageEvercookie) }, Set: function (e, r, t) { window.openDatabase ? (database || (database = window.openDatabase("etrust", "", e, 1048576)), database.transaction(function (t) { t.executeSql("CREATE TABLE IF NOT EXISTS cache(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, value TEXT NOT NULL, UNIQUE (name))", [], function (e, r) { }, function (e, r) { }), t.executeSql("INSERT OR REPLACE INTO cache(name, value) VALUES(?, ?)", [e, r], function (e, r) { }, function (e, r) { }) }), t && t()) : t && t() } }), QuickStorageManager = QuickStorageManager || (quickStorageManagers = [LocalStorageManager, SessionStorageManager, GlobalStorageManager], { Get: function (e, r) { for (var t = 0, a = !1, o = 0; o < quickStorageManagers.length; o++)quickStorageManagers[o].Get(e, function (e) { e.id && !a && (a = !0, r(e)), ++t == quickStorageManagers.length && (a || r(e), a = !1) }) }, Set: function (e, r, t) { for (var a = 0, o = 0; o < quickStorageManagers.length; o++)quickStorageManagers[o].Set(e, r, function (e) { ++a === quickStorageManagers.length && t && t() }) } }), IFrameStorageManager = IFrameStorageManager || (iframe = null, loadIFrame = function (e) { iframe = document.createElement("iframe"), iframe.setAttribute("src", ConfigManager.CdnUrl + "/trustevIFrame.html"), iframe.style.display = "none", document.body.appendChild(iframe), iframe.onload = function () { IFrameMessageManager.Init(window, "message"), e() } }, { Get: function (e, r) { var t = { type: "IFrame_Evercookie_Get_Init" }; t.evercookieIdKey = e, iframe ? IFrameMessageManager.Send(iframe, t, function (e) { e.source = "iframe-" + e.source, TrustevLogger.LogMessage("IFrameStorageManager-Get : Found IFrame evercookie : " + JSON.stringify(e)), r(e) }) : loadIFrame(function () { IFrameMessageManager.Send(iframe, t, function (e) { e.source = "iframe-" + e.source, TrustevLogger.LogMessage("IFrameStorageManager-Get : Found IFrame evercookie : " + JSON.stringify(e)), r(e) }) }) }, Set: function (e, r, t) { var a = { type: "IFrame_Evercookie_Set_Init" }; a.evercookieIdKey = e, a.evercookieId = r, TrustevLogger.LogMessage("Setting IFrame evercookie : Key " + e + ", Id : " + r), iframe ? IFrameMessageManager.Send(iframe, a, t) : loadIFrame(function () { IFrameMessageManager.Send(iframe, a, t) }) } }), IFrameMessageManager = IFrameMessageManager || (messageIdentifier = "TrustevIFrameMessage", currentMessageCallBack = null, iFrameListener = function (e) { if (e.data && "TrustevIFrameMessage" === e.data.identifier) switch (e.data.type) { case "IFrame_Evercookie_Get_Result": currentMessageCallBack && currentMessageCallBack(e.data.evercookie); break; case "IFrame_Evercookie_Set_Result": currentMessageCallBack && currentMessageCallBack(); break; default: TrustevLogger.LogMessage("Unrecognized iframe message type") } }, { Init: function (e, r, t) { "addEventListener" in e ? e.addEventListener(r, iFrameListener, !1) : "attachEvent" in e && e.attachEvent("on" + r, iFrameListener) }, Send: function (e, r, t) { currentMessageCallBack = t, r.identifier = messageIdentifier, e.contentWindow.postMessage(r, "*") } }); !function e() { if (void 0 !== TrustevV2) { var r = TrustevV2.GetJsUrlParams; r.hasOwnProperty("key") && TrustevV2.Init(r.key, function () { }) } else setTimeout(e, 50) }();